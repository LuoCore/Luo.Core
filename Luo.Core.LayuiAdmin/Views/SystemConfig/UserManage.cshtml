@{

}
<div class="layuimini-container">
    <div class="layuimini-main">

        <fieldset class="table-search-fieldset">
            <legend>搜索信息</legend>
            <div style="margin: 10px 10px 10px 10px">
                <form class="layui-form layui-form-pane" action="">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">用户姓名</label>
                            <div class="layui-input-inline">
                                <input type="text" name="UserName" id="UserName" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                        <div class="layui-inline">

                            <label class="layui-form-label">创建时间</label>
                            <div class="layui-input-inline">
                                <input type="text" name="TimeStart" id="TimeStart" lay-verify="datetime" placeholder="yyyy-MM-dd HH:mm:ss" autocomplete="off" class="layui-input">
                            </div>
                            <label class="layui-form-label">到</label>
                            <div class="layui-input-inline">
                                <input type="text" name="TimeEnd" id="TimeEnd" lay-verify="datetime" placeholder="yyyy-MM-dd HH:mm:ss" autocomplete="off" class="layui-input">
                            </div>
                            <input class="layui-form-label" type="checkbox" id="TimeEnable" title="启用" lay-skin="primary" checked>
                        </div>

                    </div>
                </form>
            </div>
        </fieldset>

        <script type="text/html" id="toolbarEvent">
            <div class="layui-btn-container">
                <div class="layui-inline">
                    <button class="layui-btn layui-btn-normal" lay-event="btnQuery"><i class="layui-icon"></i> 搜 索</button>
                </div>
                <button class="layui-btn layui-btn-radius  data-add-btn" lay-event="btnAdd"> 添加 </button>
                <button class="layui-btn layui-btn-radius layui-btn-danger data-delete-btn" lay-event="btnDelete"> 删除 </button>
            </div>
        </script>

        <table class="layui-hide" id="currentTable" lay-filter="currentTableFilter"></table>

        <script type="text/html" id="currentTableBar">
            <a class="layui-btn layui-btn-normal layui-btn-xs data-count-edit" lay-event="edit">编辑</a>
            <a class="layui-btn layui-btn-xs layui-btn-danger data-count-delete" lay-event="delete">删除</a>
        </script>




    </div>
</div>

@section Scripts {
    <script>
        layui.use(['form', 'table', 'laydate','layer'], function () {
            var $ = layui.jquery,
                form = layui.form,
                table = layui.table,
                laydate = layui.laydate;

            
            laydate.render({
                elem: '#TimeStart',
                type: 'datetime',
                format: 'yyyy-MM-dd HH:mm:ss',
                value: '@DateTime.Now.ToString("yyyy-MM-dd 00:00:00")'
            });
            laydate.render({
                elem: '#TimeEnd',
                type: 'datetime',
                format: 'yyyy-MM-dd HH:mm:ss',
                value: '@DateTime.Now.ToString("yyyy-MM-dd 23:59:59")'
            });
            form.render();

            const tempDataTable= table.render({
                elem: '#currentTable',
                toolbar: '#toolbarEvent',
                defaultToolbar: ['filter'],
                cellMinWidth: 80,
                loading: false,
                cols: [[
                    { type: "checkbox", width: '5%' },
                    { field: 'id', width: '10%', title: 'ID', sort: true },
                    { field: 'username', width: '15%', title: '用户名' },
                    { field: 'createTime', width: '30%', title: '创建时间', sort: true },
                    { field: 'createName', width: '20%', title: '创建人', sort: true },
                    { title: '操作', minWidth: '20%', toolbar: '#currentTableBar', align: "center" }
                ]],
                
                
                limits: [10, 15, 20, 25, 50, 100],
                limit: 15,
                page: true,
                skin: 'line'
            });


            //头工具栏事件
            table.on('toolbar(currentTableFilter)', function (obj) {
                debugger;
                var checkStatus = table.checkStatus(obj.config.id);

                switch (obj.event) {

                    case 'btnQuery':
                        getDataTable(obj);
                        break;
                    case 'btnAdd':
                        var data = checkStatus.data;
                        layer.msg('选中了：' + data.length + ' 个');
                        break;
                    case 'btnDelete':
                        layer.msg(checkStatus.isAll ? '全选' : '未全选');
                        break;
                };
            });


            function getDataTable(obj) {
                debugger;
                var msgDialogIndex = layer.msg('查询中，请稍等.....', { icon: 16, time: false, shade: 0 });

                tempDataTable.reload('currentTable', {
                    url: '/SystemConfig/QueryUserList',
                    method: 'post',
                    where: {
                        UserName: $('#UserName').val(),
                        TimeEnable: $('#TimeEnable').prop("checked"),
                        TimeStart: $('#TimeStart').val(),
                        TimeEnd: $('#TimeEnd').val()
                    },
                    request: {
                        pageName: 'PageIndex', //页码的参数名称，默认：page
                        limitName: 'PageCount' //每页数据量的参数名，默认：limit
                    },
                    response: {
                        statusCode: 200 //重新规定成功的状态码为 200，table 组件默认为 0
                    },
                    parseData: function (resData) { //res 即为原始返回的数据
                        debugger;
                        return {
                            "code": resData.statusCode, //解析接口状态
                            "msg": resData.message, //解析提示文本
                            "count": resData.resultData.totalCount, //解析数据长度
                            "data": resData.resultData.userInfoList //解析数据列表
                        };
                    },
                    done: function (res, curr, count) {
                        //如果是异步请求数据方式，res即为你接口返回的信息。
                        //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                        console.log(res);
                        //得到当前页码
                        console.log(curr);
                        //得到数据总量
                        console.log(count);
                        layer.close(msgDialogIndex);
                    },
                    error: function (obj, context) {
                      
                        console.log(obj);

                        //得到当前页码
                        console.log(context);
                        layer.close(msgDialogIndex);
                    }
                });


                
               
            }




        });
    </script>
}