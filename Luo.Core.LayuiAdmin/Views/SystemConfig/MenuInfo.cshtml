
@{
    ViewData["Title"] = "MenuInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/font/iconfont.css" rel="stylesheet" />
<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />

<div class="card">

    <div class="card-body">
        <form class="row gx-3 gy-2 align-items-center layui-form">
            <div class="col-sm-3">
                <label class="input-group-text">上级菜单</label>
                <div id="menuSelectBox" class="ew-xmselect-tree"></div>
            </div>
            <div class="col-sm-3">
                <label class="input-group-text">菜单名称</label>
                <input id="menuName" class="layui-input" placeholder="请输入菜单名称" lay-verType="tips" lay-verify="required" required />
            </div>

            <div class="col-sm-3">
                <label class="input-group-text">菜单类型</label>

                <select id="menuType" lay-verify="">

                    @{
                        Type enumType = typeof(Luo.Core.EnumModels.MenuTypeEnum);
                        Array values = Enum.GetValues(enumType);
                        if (values.Length > 0)
                        {
                            foreach (int item in values)
                            {
                                <option value="@item.ToString()">@Enum.GetName(enumType, item)</option>
                            }
                        }
                    }
                </select>
            </div>
            <div class="col-sm-3">
                <label class="input-group-text">菜单链接</label>
                <input id="menuUrl" class="layui-input" placeholder="请输入菜单链接" lay-verType="tips" lay-verify="required" required />
            </div>

            <div class="col-sm-3">
                <label class="input-group-text">菜单图标</label>
                <div class="card ">
                    <div class="card-body bd-example">
                        <div class="row">
                            <div class="col-6" style="width:fit-content">
                                <input type="text" id="iconPicker" value="layui-icon-heart-fill" lay-filter="iconPicker" class="hide">
                            </div>
                            <div class="col-6">
                                <label id="menuIcon" class="col-form-label">layui-icon-heart-fill</label>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="col-sm-3">
                <label class="input-group-text">排序</label>
                <input id="menuSort" class="layui-input" type="number" placeholder="请输入排序" lay-verType="tips" lay-verify="required" required />
            </div>
            <div class="col-sm-3">
                <label class="input-group-text">是否禁用</label>
                <div class="card text-center">
                    <div class="card-body">
                        <input type="checkbox" id="menuEnable" value="true" title="禁用">
                    </div>
                </div>
            </div>
        </form>



    </div>
    <div class="card-footer text-muted  text-center">
        <div class="col-auto">
            <button type="button" name="btn-save" class="btn btn-primary btn-lg">保存</button>
        </div>
    </div>
</div>






@section Scripts {
    <script src="~/layui_extend/iconPicker.js"></script>
    <script src="~/layui_extend/xm-select.js"></script>
    <script>
       
        function ShowDialog_Load(reqData) {

           
            let menuId = 0;
            

            layui.use(['layer', 'form', 'xmSelect'], function () {

                var $ = layui.jquery;
                var layer = layui.layer;
                var form = layui.form;
                var xmSelect = layui.xmSelect;

                var icon = layui.icon;

               

                debugger;
                if (reqData != null) {
                    menuId = reqData.menuId;
                    menuParWinObj = reqData;

                    document.getElementById("menuName").value = menuParWinObj.menuName;
                    document.getElementById("menuUrl").value = menuParWinObj.menuUrl;
                   
                    document.getElementById("menuSort").value = menuParWinObj.menuSort;
                    document.getElementById("menuType").value = menuParWinObj.menuType;

                   
                    $('#menuIcon').html(menuParWinObj.menuIcon);
                    document.getElementById("iconPicker").value = menuParWinObj.menuIcon;
                    $('#menuEnable').prop('checked', !reqData.menuEnable)
                    //debugger;
                    //$('#menuType').find("option[value=" + menuParWinObj.menuType + "]").attr("selected", true);
                    form.render();
                }
                //初始化图标选择
                var iconPic = icon.render({
                    elem: '#iconPicker',
                    style: 'color: #5FB878;',
                    placeholder: '',
                    isSplit: true,
                    page: true,
                    search: true,
                    click: function (obj) {
                        console.log(obj)
                        $('#menuIcon').html(obj.fontclass);
                    },
                    ready: function () {
                        console.log(1)
                    }
                });
                

                let menuParentSelect;

                const msgDialogIndex = layer.msg('正在执行，请稍等.....', { shade: 0.3, icon: 16 });
                $.ajax({
                    type: "post",
                    url: "/SystemConfig/GetAllMenuInfos",
                    success: function (res) {
                        menuParentSelect = xmSelect.render({
                            el: '#menuSelectBox',
                            name: 'parentMenuId',
                            height: '250px',
                            layVerify: 'required',
                            layVerType: 'tips',
                            //initValue: [],//选中 的优先级大于选项中的selected
                            data: res,
                            model: { icon: 'hidden', label: { type: 'text' } },
                            prop: {
                                name: 'menuName',
                                value: 'menuId',
                                selected: "selectedCheck"
                            },
                            radio: true,
                            clickClose: true,
                            filterable: true,//是否开启搜索
                            searchTips: "请输入菜单名称",//搜索提示

                            tree: {
                                show: true,
                                indent: 15,//间距
                                strict: false,//是否严格遵守父子模式
                                expandedKeys: true,// 默认展开的节点数组, 为true时展开所有节点
                                clickCheck: true,//点击节点是否选中, false时点击复选框进行选中操作
                                showLine: true, //是否显示虚线
                                clickExpand: false//点击节点是否展开, false时点击三角箭头进行展开操作
                            },
                            tips: '请选择上级菜单'
                        });
                        menuParentSelect.setValue([{ menuName: "顶级", menuId: 0, selectedCheck: true }]);
                        layer.close(msgDialogIndex);
                    },
                    error: function (jqXHR) {
                        layer.close(msgDialogIndex);
                        layer.msg("发生错误：" + jqXHR.status, {
                            time: 0,  //不自动关闭
                            btn: ['确定'],
                            yes: function (index) {
                                layer.close(index);
                            }
                        });
                    }
                });


             

                $('button[name="btn-save"]').click(function () {

                    const menuParientId = menuParentSelect.getValue();
                    if (menuParientId.length < 1) {
                        layer.msg("请选择父级菜单！");
                        return;
                    }

                    const msgDialogIndex = layer.msg('正在执行，请稍等.....', { shade: 0.3, icon: 16 });
                    $.ajax({
                        type: "post",
                        url: "/SystemConfig/AddEditMenuInfo",
                        data: {
                            MenuId: menuId,
                            MenuName: $('#menuName').val(),
                            MenuAddress: $('#menuUrl').val(),
                            MenuIcon: $('#menuIcon').html(),
                            MenuSort: $('#menuSort').val(),
                            MenuType: $('#menuType').val(),
                            ParentMenuId: menuParientId[0].menuId,
                            MenuEnable: $('#menuEnable:checked').val()
                        },
                        success: function (res) {
                            layer.close(msgDialogIndex);
                            if (res.status) {
                                layer.msg(menuId > 0 ? '修改成功' : '添加成功', {
                                    time: 2000,
                                    end: function () {
                                        var index = parent.layer.getFrameIndex(window.name); //获取窗口索引
                                        parent.layer.close(index);
                                    }
                                });
                            }
                            else {
                                layer.msg(res.msg, { icon: 5 });
                            }
                          
                        },
                        error: function (jqXHR) {
                            layer.close(msgDialogIndex);
                            layer.msg("发生错误：" + jqXHR.status, {
                                time: 0,  //不自动关闭
                                btn: ['确定'],
                                yes: function (index) {
                                    layer.close(index);
                                }
                            });
                        }
                    });


                 

                })

            });
        }
      
    </script>

}