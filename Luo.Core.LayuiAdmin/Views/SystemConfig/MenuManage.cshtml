@using Luo.Core.Utility;
@{
    List<Luo.Core.Models.ViewModels.Response.MenuInfoList> _userBtn = this.Context.GetMenuButton("/SystemConfig/MenuManage");

}
<link href="~/css/treetable.css" rel="stylesheet" asp-append-version="true" />
<div class="layui-card">
    <div class="layui-card-body">
        <form class="layui-form" action="">
            <div class="layui-form-item">
                <label class="layui-form-label">关键字</label>
                <div class="layui-input-inline">
                    <input type="text" name="keyword" placeholder="" class="layui-input">
                </div>
            </div>
        </form>
    </div>
</div>

<div class="layui-card">
    <div class="layui-card-body">
        <table id="tableData" lay-filter="tableFilter"></table>
    </div>
</div>

<script type="text/html" id="menu-toolbar">

    <button class="layui-btn layui-btn-normal layui-btn-md layui-btn-mt10 layui-btn-ml10" lay-event="btnQuery">
        <i class="layui-icon layui-icon-search"></i>
        查询
    </button>
    @{
        if (_userBtn.Any(x => x.MenuName == "添加"))
        {
            <button class="layui-btn layui-btn-primary layui-btn-md layui-btn-mt10" lay-event="add">
                <i class="layui-icon layui-icon-add-1"></i>
                新增
            </button>
        }
        if (_userBtn.Any(x => x.MenuName == "删除"))
        {
            <button class="layui-btn layui-btn-danger layui-btn-md layui-btn-mt10" lay-event="batchRemove">
                <i class="layui-icon layui-icon-delete"></i>
                删除
            </button>
        }
    }


    <button class="layui-btn layui-btn-success layui-btn-md layui-btn-mt10" lay-event="expandAll">
        <i class="layui-icon layui-icon-spread-left"></i>
        展开
    </button>
    <button class="layui-btn layui-btn-success layui-btn-md layui-btn-mt10" lay-event="foldAll">
        <i class="layui-icon layui-icon-shrink-right"></i>
        折叠
    </button>

</script>

<script type="text/html" id="menu-bar">
    <button class="layui-btn layui-btn-primary layui-btn-sm" lay-event="edit"><i class="layui-icon layui-icon-edit"></i></button>
    <button class="layui-btn layui-btn-danger layui-btn-sm" lay-event="remove"><i class="layui-icon layui-icon-delete"></i></button>
</script>

<script type="text/html" id="menu-type">
    {{#if (d.menuType == '0') { }}
    <span>目录</span>
    {{# }else if(d.menuType == '1'){ }}
    <span>菜单</span>
    {{# }else if(d.menuType == '2'){ }}
    <span>按钮</span>
    {{# } }}
</script>

<script type="text/html" id="menu-enable">
    <input type="checkbox" name="menu-enable" value="{{d.menuEnable}}" lay-skin="switch" lay-text="启用|禁用" lay-filter="menu-enable" {{ d.menuEnable ? 'checked' : '' }}>
</script>
<script type="text/html" id="switchTpl">
    <!-- 这里的 checked 的状态只是演示 -->
    <input type="checkbox" name="sex" value="{{d.id}}" lay-skin="switch" lay-text="女|男" lay-filter="sexDemo" >
</script>


<script type="text/html" id="menu-icon">
    <i class="layui-icon {{d.menuIcon}}"></i>
</script>



@section Scripts {
    <script src="~/layui_extend/treetable.js" asp-append-version="true"></script>
    <script>
        layui.use(['table', 'form', 'jquery', 'treetable'], function () {
            let table = layui.table;
            let form = layui.form;
            let $ = layui.jquery;
            let treetable = layui.treetable;


            treetable.render({
                elem: '#tableData',
                treeColIndex: 1,
                treeSpid: 0,
                treeIdName: 'menuId',
                method: "post",
                treePidName: 'parentMenuId',
                skin: 'line',
                treeDefaultClose: true,
                toolbar: '#menu-toolbar',
                page: false,
                cols: [
                    [
                        { type: 'checkbox' },
                        { field: 'menuName', minWidth: 200, title: '权限名称' },
                        { field: 'menuIcon', title: '图标', templet: '#menu-icon' },
                        { field: 'menuUrl', minWidth: 200, title: '权限链接' },
                        { field: 'menuType', title: '权限类型', templet: '#menu-type' },
                        { field: 'menuEnable', title: '是否禁用', templet: '#menu-enable' },
                        { field: 'menuSort', title: '排序' },

                        { title: '操作', templet: '#menu-bar', width: 150, align: 'center' }
                    ]
                ]
            });
            //表格按钮
            table.on('tool(tableFilter)', function (obj) {
                if (obj.event === 'edit') {
                    DialogShowBox({ title: "修改菜单信息", data: obj.data })
                }
                else if (obj.event === 'remove') {
                    CurrentRemove(obj);
                }  
            })
            //顶部头按钮
            table.on('toolbar(tableFilter)', function (obj) {
                if (obj.event === 'btnQuery') {
                    
                    const keyword = $("input[name='keyword']").val();
                    debugger;
                    if (keyword != "") {
                        treetable.search('#tableData', keyword);
                    }
                    else {
                        treetable.reload("#tableData", "/SystemConfig/GetMenuInfos");
                    } 
                   
                }
                else if (obj.event === 'add') {
                    DialogShowBox({ title: "新增菜单信息", data: null })
                }
                else if (obj.event === 'batchRemove') {
                    batchRemove(obj);
                } else if (obj.event === 'expandAll') {
                    treetable.expandAll("#tableData");
                } else if (obj.event === 'foldAll') {
                    treetable.foldAll("#tableData");
                } else if (obj.event === 'reload') {
                    treetable.reload("#tableData");
                }
            });

            form.on('submit(power-query)', function (data) {
             
                return false;
            });

            //弹框
            const DialogShowBox = (obj) => {
                layer.open({
                    type: 2,
                    title: obj.title,
                    shade: 0.1,
                    anim: 1,//弹出动画
                    resize: false,//是否允许拉伸
                    area: ['400px', '500px'],
                    content: '/SystemConfig/MenuInfo',
                    success: function (layero, index) {
                        const iframe = window['layui-layer-iframe' + index];
                        iframe.ShowDialog_Load(obj.data);
                    }
                });
            }

            //删除当前的
            const CurrentRemove = function (obj) {
                layer.confirm('确定要删除该菜单？', { icon: 3, title: '提示' }, function (index) {
                    layer.close(index);

                    let idsData = [];
                    idsData.push(obj.data.menuId)
                    const loadingIndex = layer.msg('正在执行，请稍等.....', { shade: 0.3, icon: 16 });
                    $.ajax({
                        url: '/SystemConfig/DeleteMenuInfoByIds/',
                        dataType: 'json',
                        type: 'delete',
                        data: { ids: idsData},
                        success: function (res) {
                            layer.close(loadingIndex);
                            if (res.status) {
                                layer.msg("删除成功", { icon: 1, time: 1000 }, function () {
                                    obj.del();
                                });
                            } else {
                                layer.msg("删除失败！\r\n"+res.msg, {
                                    icon: 2,
                                    time: 0,  //不自动关闭
                                    btn: ['确定'],
                                    yes: function (index) {
                                        layer.close(index);
                                    }
                                });
                            }
                        },error: function (jqXHR) {
                            layer.close(loadingIndex);
                            layer.msg("发生错误：" + jqXHR.status, {
                                time: 0,  //不自动关闭
                                btn: ['确定'],
                                yes: function (index) {
                                    layer.close(index);
                                }
                            });
                        }
                    })
                });
            }
            //批量删除
            const batchRemove = function (obj) {
                let data = table.checkStatus(obj.config.id).data;
                if (data.length === 0) {
                    layer.msg("未选中数据", {
                        icon: 3,
                        time: 1000
                    });
                    return false;
                }
                let idsData = [];
                for (let i = 0; i < data.length; i++) {
                    idsData.push(data[i].menuId)
                }
           
                layer.confirm('确定要删除这些数据', {
                    icon: 3,
                    title: '提示'
                }, function (index) {
                    layer.close(index);
                 
                    const msgDialogIndex = layer.msg('正在执行，请稍等.....', { shade: 0.3, icon: 16 });
                    $.ajax({
                        type: "delete",
                        url: "/SystemConfig/DeleteMenuInfoByIds/",
                        data: { ids: idsData },
                        success: function (res) {
                            layer.close(msgDialogIndex);
                            if (res.status) {
                                layer.msg("删除成功！", {
                                    icon: 1,
                                    time: 1000
                                }, function () {
                                   
                                    let tableDT = table.cache.tableData;
                                   var currData= tableDT.filter(x => !x.LAY_CHECKED);
                                    console.log(currData);
                                    table.reload("tableData", {
                                        data: currData   // 将新数据重新载入表格
                                    });
                                });
                            } else {
                                layer.msg(res.msg, {
                                    icon: 2,
                                    time: 0,  //不自动关闭
                                    btn: ['确定'],
                                    yes: function (index) {
                                        layer.close(index);
                                    }
                                });
                            }
                        },
                        error: function (jqXHR) {
                            layer.close(msgDialogIndex);
                            layer.msg("发生错误：" + jqXHR.status, {
                                time: 0,  //不自动关闭
                                btn: ['确定'],
                                yes: function (index) {
                                    layer.close(index);
                                }
                            });
                        }
                    });
                  
                });
            }
        })
    </script>
}